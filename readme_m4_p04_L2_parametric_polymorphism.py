
# !В этой практике вам предстоит посмотреть на то, как работает
# !параметрический полиморфизм.

# !parametric polymorphism

# ?src/solution.py
# Создайте функцию convert_sequence(), которая будет преобразовывать
# любые итерируемые объекты(списки, кортежи, множества) в заданный
# тип коллекции.

# ?Функция должна принимать два параметра: тип, в который нужно
# преобразовать данные("list", "tuple" или "set") и произвольное
# количество итерируемых объектов. В результате функция должна
# объединять все последовательности в одну и возвращать результат в виде
# указанного типа данных.

# \\ convert_sequence("list", {1, 2, 3}, ["f", 23, 42])
# # [1, 2, 3, "f", 23, 42]

# \\convert_sequence("tuple", ("d", 2, 3), [1, 2, 3])
# # ("d", 2, 3, 1, 2, 3)

# \\convert_sequence("set", [1, 2, 3], ("a", "b", "c"), [4, 5])
# # {1, 2, 3, "a", "b", "c", 4, 5}
